apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgres.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
            - secretRef:
                name: {{ .Release.Name }}-secret
          livenessProbe:
            exec:
              command: ["psql", "-w", "-U", "admin", "-d", "postgres", "-c", "SELECT 1"]
            periodSeconds: 5
            initialDelaySeconds: 50
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            exec:
              command: ["psql", "-w", "-U", "admin", "-d", "postgres", "-c", "SELECT 1"]
            periodSeconds: 5
            initialDelaySeconds: 45
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.storage.mountPath }}
              name: {{ .Release.Name }}-volume
      volumes:
        - name: {{ .Release.Name }}-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pv-claim
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
